
stm32f4xx_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006fc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008a4  080008ac  000108ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008a4  080008a4  000108ac  2**0
                  CONTENTS
  4 .ARM          00000000  080008a4  080008a4  000108ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008a4  080008ac  000108ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008a4  080008a4  000108a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008a8  080008a8  000108a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000108ac  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000108ac  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000108dc  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000958  00000000  00000000  0001091f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000025a  00000000  00000000  00011277  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000a8  00000000  00000000  000114d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000072  00000000  00000000  00011580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000013a5  00000000  00000000  000115f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000dad  00000000  00000000  00012997  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000540a  00000000  00000000  00013744  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000001d4  00000000  00000000  00018b50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000061  00000000  00000000  00018d24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800088c 	.word	0x0800088c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800088c 	.word	0x0800088c

080001e8 <delay>:
#include "stm32f407xx_gpio_driver.h"

#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW
void delay(void) {
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000 / 2; i++)
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
		;
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <main>:

int main(void) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed1, GPIOBtn;

	GpioLed1.pGPIOx = GPIOA;
 800021a:	4b1a      	ldr	r3, [pc, #104]	; (8000284 <main+0x70>)
 800021c:	60fb      	str	r3, [r7, #12]
	GpioLed1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 800021e:	2308      	movs	r3, #8
 8000220:	743b      	strb	r3, [r7, #16]
	GpioLed1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
	GpioLed1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	74bb      	strb	r3, [r7, #18]
	GpioLed1.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022a:	2300      	movs	r3, #0
 800022c:	753b      	strb	r3, [r7, #20]
	GpioLed1.GPIO_PinConfig.GPIO_PinPupdControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4813      	ldr	r0, [pc, #76]	; (8000284 <main+0x70>)
 8000236:	f000 f853 	bl	80002e0 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed1);
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	4618      	mov	r0, r3
 8000240:	f000 f936 	bl	80004b0 <GPIO_Init>

	GPIOBtn.pGPIOx = GPIOB;
 8000244:	4b10      	ldr	r3, [pc, #64]	; (8000288 <main+0x74>)
 8000246:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000248:	230c      	movs	r3, #12
 800024a:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800024c:	2300      	movs	r3, #0
 800024e:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000250:	2302      	movs	r3, #2
 8000252:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPupdControl = GPIO_PIN_PU;
 8000254:	2301      	movs	r3, #1
 8000256:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000258:	2101      	movs	r1, #1
 800025a:	480a      	ldr	r0, [pc, #40]	; (8000284 <main+0x70>)
 800025c:	f000 f840 	bl	80002e0 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 8000260:	463b      	mov	r3, r7
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f924 	bl	80004b0 <GPIO_Init>
	 GPIO_Init(&GpioLed4);*/

	while (1) {
		/*GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
		 delay(); */
		if (GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED) {
 8000268:	210c      	movs	r1, #12
 800026a:	4807      	ldr	r0, [pc, #28]	; (8000288 <main+0x74>)
 800026c:	f000 fabe 	bl	80007ec <GPIO_ReadFromInputPin>
 8000270:	4603      	mov	r3, r0
 8000272:	2b00      	cmp	r3, #0
 8000274:	d1f8      	bne.n	8000268 <main+0x54>
			delay();
 8000276:	f7ff ffb7 	bl	80001e8 <delay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_8);
 800027a:	2108      	movs	r1, #8
 800027c:	4801      	ldr	r0, [pc, #4]	; (8000284 <main+0x70>)
 800027e:	f000 facb 	bl	8000818 <GPIO_ToggleOutputPin>
		if (GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED) {
 8000282:	e7f1      	b.n	8000268 <main+0x54>
 8000284:	40020000 	.word	0x40020000
 8000288:	40020400 	.word	0x40020400

0800028c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800028c:	480d      	ldr	r0, [pc, #52]	; (80002c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000290:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480c      	ldr	r0, [pc, #48]	; (80002c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490d      	ldr	r1, [pc, #52]	; (80002cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0d      	ldr	r2, [pc, #52]	; (80002d0 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0a      	ldr	r2, [pc, #40]	; (80002d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0a      	ldr	r4, [pc, #40]	; (80002d8 <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ba:	f000 fac3 	bl	8000844 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002be:	f7ff ffa9 	bl	8000214 <main>

080002c2 <LoopForever>:

LoopForever:
  b LoopForever
 80002c2:	e7fe      	b.n	80002c2 <LoopForever>
  ldr   r0, =_estack
 80002c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d0:	080008ac 	.word	0x080008ac
  ldr r2, =_sbss
 80002d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d8:	2000001c 	.word	0x2000001c

080002dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002dc:	e7fe      	b.n	80002dc <ADC_IRQHandler>
	...

080002e0 <GPIO_PeriClockControl>:
 *      Author: sametuslu
 */
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 80002e0:	b480      	push	{r7}
 80002e2:	b083      	sub	sp, #12
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
 80002e8:	460b      	mov	r3, r1
 80002ea:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE) {
 80002ec:	78fb      	ldrb	r3, [r7, #3]
 80002ee:	2b01      	cmp	r3, #1
 80002f0:	d162      	bne.n	80003b8 <GPIO_PeriClockControl+0xd8>
		if (pGPIOx == GPIOA) {
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a64      	ldr	r2, [pc, #400]	; (8000488 <GPIO_PeriClockControl+0x1a8>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLOCK_EN();
 80002fa:	4b64      	ldr	r3, [pc, #400]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a63      	ldr	r2, [pc, #396]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000300:	f043 0301 	orr.w	r3, r3, #1
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOH_PCLOCK_DIS();
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLOCK_DIS();
		}
	}
}
 8000306:	e0b9      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a61      	ldr	r2, [pc, #388]	; (8000490 <GPIO_PeriClockControl+0x1b0>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLOCK_EN();
 8000310:	4b5e      	ldr	r3, [pc, #376]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a5d      	ldr	r2, [pc, #372]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000316:	f043 0302 	orr.w	r3, r3, #2
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e0ae      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a5c      	ldr	r2, [pc, #368]	; (8000494 <GPIO_PeriClockControl+0x1b4>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLOCK_EN();
 8000326:	4b59      	ldr	r3, [pc, #356]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a58      	ldr	r2, [pc, #352]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800032c:	f043 0304 	orr.w	r3, r3, #4
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e0a3      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a58      	ldr	r2, [pc, #352]	; (8000498 <GPIO_PeriClockControl+0x1b8>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLOCK_EN();
 800033c:	4b53      	ldr	r3, [pc, #332]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a52      	ldr	r2, [pc, #328]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000342:	f043 0308 	orr.w	r3, r3, #8
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e098      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a53      	ldr	r2, [pc, #332]	; (800049c <GPIO_PeriClockControl+0x1bc>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLOCK_EN();
 8000352:	4b4e      	ldr	r3, [pc, #312]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a4d      	ldr	r2, [pc, #308]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000358:	f043 0310 	orr.w	r3, r3, #16
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e08d      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a4f      	ldr	r2, [pc, #316]	; (80004a0 <GPIO_PeriClockControl+0x1c0>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLOCK_EN();
 8000368:	4b48      	ldr	r3, [pc, #288]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a47      	ldr	r2, [pc, #284]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800036e:	f043 0320 	orr.w	r3, r3, #32
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	e082      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a4a      	ldr	r2, [pc, #296]	; (80004a4 <GPIO_PeriClockControl+0x1c4>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLOCK_EN();
 800037e:	4b43      	ldr	r3, [pc, #268]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a42      	ldr	r2, [pc, #264]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000384:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038a:	e077      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a46      	ldr	r2, [pc, #280]	; (80004a8 <GPIO_PeriClockControl+0x1c8>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLOCK_EN();
 8000394:	4b3d      	ldr	r3, [pc, #244]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a3c      	ldr	r2, [pc, #240]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800039a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a0:	e06c      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a41      	ldr	r2, [pc, #260]	; (80004ac <GPIO_PeriClockControl+0x1cc>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d168      	bne.n	800047c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLOCK_EN();
 80003aa:	4b38      	ldr	r3, [pc, #224]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a37      	ldr	r2, [pc, #220]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b6:	e061      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a33      	ldr	r2, [pc, #204]	; (8000488 <GPIO_PeriClockControl+0x1a8>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0xee>
			GPIOA_PCLOCK_DIS();
 80003c0:	4b32      	ldr	r3, [pc, #200]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c4:	4a31      	ldr	r2, [pc, #196]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003c6:	f023 0301 	bic.w	r3, r3, #1
 80003ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003cc:	e056      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a2f      	ldr	r2, [pc, #188]	; (8000490 <GPIO_PeriClockControl+0x1b0>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLOCK_DIS();
 80003d6:	4b2d      	ldr	r3, [pc, #180]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003da:	4a2c      	ldr	r2, [pc, #176]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003dc:	f023 0302 	bic.w	r3, r3, #2
 80003e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e2:	e04b      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a2b      	ldr	r2, [pc, #172]	; (8000494 <GPIO_PeriClockControl+0x1b4>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLOCK_DIS();
 80003ec:	4b27      	ldr	r3, [pc, #156]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a26      	ldr	r2, [pc, #152]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 80003f2:	f023 0304 	bic.w	r3, r3, #4
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f8:	e040      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a26      	ldr	r2, [pc, #152]	; (8000498 <GPIO_PeriClockControl+0x1b8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLOCK_DIS();
 8000402:	4b22      	ldr	r3, [pc, #136]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a21      	ldr	r2, [pc, #132]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000408:	f023 0308 	bic.w	r3, r3, #8
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040e:	e035      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a22      	ldr	r2, [pc, #136]	; (800049c <GPIO_PeriClockControl+0x1bc>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLOCK_DIS();
 8000418:	4b1c      	ldr	r3, [pc, #112]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041c:	4a1b      	ldr	r2, [pc, #108]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800041e:	f023 0310 	bic.w	r3, r3, #16
 8000422:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000424:	e02a      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a1d      	ldr	r2, [pc, #116]	; (80004a0 <GPIO_PeriClockControl+0x1c0>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLOCK_DIS();
 800042e:	4b17      	ldr	r3, [pc, #92]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000432:	4a16      	ldr	r2, [pc, #88]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000434:	f023 0320 	bic.w	r3, r3, #32
 8000438:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043a:	e01f      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a19      	ldr	r2, [pc, #100]	; (80004a4 <GPIO_PeriClockControl+0x1c4>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLOCK_DIS();
 8000444:	4b11      	ldr	r3, [pc, #68]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000448:	4a10      	ldr	r2, [pc, #64]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800044a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800044e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000450:	e014      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a14      	ldr	r2, [pc, #80]	; (80004a8 <GPIO_PeriClockControl+0x1c8>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLOCK_DIS();
 800045a:	4b0c      	ldr	r3, [pc, #48]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045e:	4a0b      	ldr	r2, [pc, #44]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000460:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000464:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000466:	e009      	b.n	800047c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a10      	ldr	r2, [pc, #64]	; (80004ac <GPIO_PeriClockControl+0x1cc>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d105      	bne.n	800047c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLOCK_DIS();
 8000470:	4b06      	ldr	r3, [pc, #24]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a05      	ldr	r2, [pc, #20]	; (800048c <GPIO_PeriClockControl+0x1ac>)
 8000476:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047c:	bf00      	nop
 800047e:	370c      	adds	r7, #12
 8000480:	46bd      	mov	sp, r7
 8000482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000486:	4770      	bx	lr
 8000488:	40020000 	.word	0x40020000
 800048c:	40023800 	.word	0x40023800
 8000490:	40020400 	.word	0x40020400
 8000494:	40020800 	.word	0x40020800
 8000498:	40020c00 	.word	0x40020c00
 800049c:	40021000 	.word	0x40021000
 80004a0:	40021400 	.word	0x40021400
 80004a4:	40021800 	.word	0x40021800
 80004a8:	40021c00 	.word	0x40021c00
 80004ac:	40022000 	.word	0x40022000

080004b0 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 80004b0:	b480      	push	{r7}
 80004b2:	b087      	sub	sp, #28
 80004b4:	af00      	add	r7, sp, #0
 80004b6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temp register
 80004b8:	2300      	movs	r3, #0
 80004ba:	617b      	str	r3, [r7, #20]
	//1.COnfigure the mode of GPIO Pin
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	795b      	ldrb	r3, [r3, #5]
 80004c0:	2b03      	cmp	r3, #3
 80004c2:	d821      	bhi.n	8000508 <GPIO_Init+0x58>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	795b      	ldrb	r3, [r3, #5]
 80004c8:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	791b      	ldrb	r3, [r3, #4]
 80004ce:	005b      	lsls	r3, r3, #1
 80004d0:	fa02 f303 	lsl.w	r3, r2, r3
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80004d4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	681a      	ldr	r2, [r3, #0]
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	791b      	ldrb	r3, [r3, #4]
 80004e0:	4619      	mov	r1, r3
 80004e2:	2303      	movs	r3, #3
 80004e4:	408b      	lsls	r3, r1
 80004e6:	43db      	mvns	r3, r3
 80004e8:	4619      	mov	r1, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	400a      	ands	r2, r1
 80004f0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	6819      	ldr	r1, [r3, #0]
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	697a      	ldr	r2, [r7, #20]
 80004fe:	430a      	orrs	r2, r1
 8000500:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000502:	2300      	movs	r3, #0
 8000504:	617b      	str	r3, [r7, #20]
 8000506:	e0ca      	b.n	800069e <GPIO_Init+0x1ee>

	} else {
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	795b      	ldrb	r3, [r3, #5]
 800050c:	2b04      	cmp	r3, #4
 800050e:	d117      	bne.n	8000540 <GPIO_Init+0x90>
			//1. Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000510:	4b4a      	ldr	r3, [pc, #296]	; (800063c <GPIO_Init+0x18c>)
 8000512:	68db      	ldr	r3, [r3, #12]
 8000514:	687a      	ldr	r2, [r7, #4]
 8000516:	7912      	ldrb	r2, [r2, #4]
 8000518:	4611      	mov	r1, r2
 800051a:	2201      	movs	r2, #1
 800051c:	408a      	lsls	r2, r1
 800051e:	4611      	mov	r1, r2
 8000520:	4a46      	ldr	r2, [pc, #280]	; (800063c <GPIO_Init+0x18c>)
 8000522:	430b      	orrs	r3, r1
 8000524:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000526:	4b45      	ldr	r3, [pc, #276]	; (800063c <GPIO_Init+0x18c>)
 8000528:	689b      	ldr	r3, [r3, #8]
 800052a:	687a      	ldr	r2, [r7, #4]
 800052c:	7912      	ldrb	r2, [r2, #4]
 800052e:	4611      	mov	r1, r2
 8000530:	2201      	movs	r2, #1
 8000532:	408a      	lsls	r2, r1
 8000534:	43d2      	mvns	r2, r2
 8000536:	4611      	mov	r1, r2
 8000538:	4a40      	ldr	r2, [pc, #256]	; (800063c <GPIO_Init+0x18c>)
 800053a:	400b      	ands	r3, r1
 800053c:	6093      	str	r3, [r2, #8]
 800053e:	e035      	b.n	80005ac <GPIO_Init+0xfc>

		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	795b      	ldrb	r3, [r3, #5]
 8000544:	2b05      	cmp	r3, #5
 8000546:	d117      	bne.n	8000578 <GPIO_Init+0xc8>
				== GPIO_MODE_IT_RT) {
			//1. Configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000548:	4b3c      	ldr	r3, [pc, #240]	; (800063c <GPIO_Init+0x18c>)
 800054a:	689b      	ldr	r3, [r3, #8]
 800054c:	687a      	ldr	r2, [r7, #4]
 800054e:	7912      	ldrb	r2, [r2, #4]
 8000550:	4611      	mov	r1, r2
 8000552:	2201      	movs	r2, #1
 8000554:	408a      	lsls	r2, r1
 8000556:	4611      	mov	r1, r2
 8000558:	4a38      	ldr	r2, [pc, #224]	; (800063c <GPIO_Init+0x18c>)
 800055a:	430b      	orrs	r3, r1
 800055c:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055e:	4b37      	ldr	r3, [pc, #220]	; (800063c <GPIO_Init+0x18c>)
 8000560:	68db      	ldr	r3, [r3, #12]
 8000562:	687a      	ldr	r2, [r7, #4]
 8000564:	7912      	ldrb	r2, [r2, #4]
 8000566:	4611      	mov	r1, r2
 8000568:	2201      	movs	r2, #1
 800056a:	408a      	lsls	r2, r1
 800056c:	43d2      	mvns	r2, r2
 800056e:	4611      	mov	r1, r2
 8000570:	4a32      	ldr	r2, [pc, #200]	; (800063c <GPIO_Init+0x18c>)
 8000572:	400b      	ands	r3, r1
 8000574:	60d3      	str	r3, [r2, #12]
 8000576:	e019      	b.n	80005ac <GPIO_Init+0xfc>

		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	795b      	ldrb	r3, [r3, #5]
 800057c:	2b06      	cmp	r3, #6
 800057e:	d115      	bne.n	80005ac <GPIO_Init+0xfc>
			//1. Configure the FTSR and RTSR

			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000580:	4b2e      	ldr	r3, [pc, #184]	; (800063c <GPIO_Init+0x18c>)
 8000582:	68db      	ldr	r3, [r3, #12]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	4611      	mov	r1, r2
 8000590:	4a2a      	ldr	r2, [pc, #168]	; (800063c <GPIO_Init+0x18c>)
 8000592:	430b      	orrs	r3, r1
 8000594:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000596:	4b29      	ldr	r3, [pc, #164]	; (800063c <GPIO_Init+0x18c>)
 8000598:	689b      	ldr	r3, [r3, #8]
 800059a:	687a      	ldr	r2, [r7, #4]
 800059c:	7912      	ldrb	r2, [r2, #4]
 800059e:	4611      	mov	r1, r2
 80005a0:	2201      	movs	r2, #1
 80005a2:	408a      	lsls	r2, r1
 80005a4:	4611      	mov	r1, r2
 80005a6:	4a25      	ldr	r2, [pc, #148]	; (800063c <GPIO_Init+0x18c>)
 80005a8:	430b      	orrs	r3, r1
 80005aa:	6093      	str	r3, [r2, #8]

		}
		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
			uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	791b      	ldrb	r3, [r3, #4]
 80005b0:	089b      	lsrs	r3, r3, #2
 80005b2:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4 ;
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	791b      	ldrb	r3, [r3, #4]
 80005b8:	f003 0303 	and.w	r3, r3, #3
 80005bc:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode =GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx) ;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	4a1f      	ldr	r2, [pc, #124]	; (8000640 <GPIO_Init+0x190>)
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d04d      	beq.n	8000664 <GPIO_Init+0x1b4>
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	4a1d      	ldr	r2, [pc, #116]	; (8000644 <GPIO_Init+0x194>)
 80005ce:	4293      	cmp	r3, r2
 80005d0:	d032      	beq.n	8000638 <GPIO_Init+0x188>
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4a1c      	ldr	r2, [pc, #112]	; (8000648 <GPIO_Init+0x198>)
 80005d8:	4293      	cmp	r3, r2
 80005da:	d02b      	beq.n	8000634 <GPIO_Init+0x184>
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a1a      	ldr	r2, [pc, #104]	; (800064c <GPIO_Init+0x19c>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d024      	beq.n	8000630 <GPIO_Init+0x180>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a19      	ldr	r2, [pc, #100]	; (8000650 <GPIO_Init+0x1a0>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d01d      	beq.n	800062c <GPIO_Init+0x17c>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a17      	ldr	r2, [pc, #92]	; (8000654 <GPIO_Init+0x1a4>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d016      	beq.n	8000628 <GPIO_Init+0x178>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a16      	ldr	r2, [pc, #88]	; (8000658 <GPIO_Init+0x1a8>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d00f      	beq.n	8000624 <GPIO_Init+0x174>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a14      	ldr	r2, [pc, #80]	; (800065c <GPIO_Init+0x1ac>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d008      	beq.n	8000620 <GPIO_Init+0x170>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a13      	ldr	r2, [pc, #76]	; (8000660 <GPIO_Init+0x1b0>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d101      	bne.n	800061c <GPIO_Init+0x16c>
 8000618:	2308      	movs	r3, #8
 800061a:	e024      	b.n	8000666 <GPIO_Init+0x1b6>
 800061c:	2300      	movs	r3, #0
 800061e:	e022      	b.n	8000666 <GPIO_Init+0x1b6>
 8000620:	2307      	movs	r3, #7
 8000622:	e020      	b.n	8000666 <GPIO_Init+0x1b6>
 8000624:	2306      	movs	r3, #6
 8000626:	e01e      	b.n	8000666 <GPIO_Init+0x1b6>
 8000628:	2305      	movs	r3, #5
 800062a:	e01c      	b.n	8000666 <GPIO_Init+0x1b6>
 800062c:	2304      	movs	r3, #4
 800062e:	e01a      	b.n	8000666 <GPIO_Init+0x1b6>
 8000630:	2303      	movs	r3, #3
 8000632:	e018      	b.n	8000666 <GPIO_Init+0x1b6>
 8000634:	2302      	movs	r3, #2
 8000636:	e016      	b.n	8000666 <GPIO_Init+0x1b6>
 8000638:	2301      	movs	r3, #1
 800063a:	e014      	b.n	8000666 <GPIO_Init+0x1b6>
 800063c:	40013c00 	.word	0x40013c00
 8000640:	40020000 	.word	0x40020000
 8000644:	40020400 	.word	0x40020400
 8000648:	40020800 	.word	0x40020800
 800064c:	40020c00 	.word	0x40020c00
 8000650:	40021000 	.word	0x40021000
 8000654:	40021400 	.word	0x40021400
 8000658:	40021800 	.word	0x40021800
 800065c:	40021c00 	.word	0x40021c00
 8000660:	40022000 	.word	0x40022000
 8000664:	2300      	movs	r3, #0
 8000666:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLOCK_EN() ;
 8000668:	4b5d      	ldr	r3, [pc, #372]	; (80007e0 <GPIO_Init+0x330>)
 800066a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800066c:	4a5c      	ldr	r2, [pc, #368]	; (80007e0 <GPIO_Init+0x330>)
 800066e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000672:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = portcode << (temp2*4) ;
 8000674:	7c7a      	ldrb	r2, [r7, #17]
 8000676:	7cbb      	ldrb	r3, [r7, #18]
 8000678:	009b      	lsls	r3, r3, #2
 800067a:	fa02 f103 	lsl.w	r1, r2, r3
 800067e:	4a59      	ldr	r2, [pc, #356]	; (80007e4 <GPIO_Init+0x334>)
 8000680:	7cfb      	ldrb	r3, [r7, #19]
 8000682:	3302      	adds	r3, #2
 8000684:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		// 3. Enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ;
 8000688:	4b57      	ldr	r3, [pc, #348]	; (80007e8 <GPIO_Init+0x338>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	687a      	ldr	r2, [r7, #4]
 800068e:	7912      	ldrb	r2, [r2, #4]
 8000690:	4611      	mov	r1, r2
 8000692:	2201      	movs	r2, #1
 8000694:	408a      	lsls	r2, r1
 8000696:	4611      	mov	r1, r2
 8000698:	4a53      	ldr	r2, [pc, #332]	; (80007e8 <GPIO_Init+0x338>)
 800069a:	430b      	orrs	r3, r1
 800069c:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800069e:	2300      	movs	r3, #0
 80006a0:	617b      	str	r3, [r7, #20]
	//2. Configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	799b      	ldrb	r3, [r3, #6]
 80006a6:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	791b      	ldrb	r3, [r3, #4]
 80006ac:	005b      	lsls	r3, r3, #1
 80006ae:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 80006b2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	689a      	ldr	r2, [r3, #8]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	791b      	ldrb	r3, [r3, #4]
 80006be:	4619      	mov	r1, r3
 80006c0:	2303      	movs	r3, #3
 80006c2:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3
 80006c4:	43db      	mvns	r3, r3
 80006c6:	4619      	mov	r1, r3
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	400a      	ands	r2, r1
 80006ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	6899      	ldr	r1, [r3, #8]
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	697a      	ldr	r2, [r7, #20]
 80006dc:	430a      	orrs	r2, r1
 80006de:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006e0:	2300      	movs	r3, #0
 80006e2:	617b      	str	r3, [r7, #20]

	//3. Configure the pupd settings

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPupdControl
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	79db      	ldrb	r3, [r3, #7]
 80006e8:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	791b      	ldrb	r3, [r3, #4]
 80006ee:	005b      	lsls	r3, r3, #1
 80006f0:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPupdControl
 80006f4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	68da      	ldr	r2, [r3, #12]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	791b      	ldrb	r3, [r3, #4]
 8000700:	4619      	mov	r1, r3
 8000702:	2303      	movs	r3, #3
 8000704:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3
 8000706:	43db      	mvns	r3, r3
 8000708:	4619      	mov	r1, r3
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	400a      	ands	r2, r1
 8000710:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	68d9      	ldr	r1, [r3, #12]
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	697a      	ldr	r2, [r7, #20]
 800071e:	430a      	orrs	r2, r1
 8000720:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000722:	2300      	movs	r3, #0
 8000724:	617b      	str	r3, [r7, #20]

	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	7a1b      	ldrb	r3, [r3, #8]
 800072a:	461a      	mov	r2, r3
			<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	791b      	ldrb	r3, [r3, #4]
 8000730:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 8000734:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	685a      	ldr	r2, [r3, #4]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	4619      	mov	r1, r3
 8000742:	2301      	movs	r3, #1
 8000744:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000746:	43db      	mvns	r3, r3
 8000748:	4619      	mov	r1, r3
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	400a      	ands	r2, r1
 8000750:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	6859      	ldr	r1, [r3, #4]
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	697a      	ldr	r2, [r7, #20]
 800075e:	430a      	orrs	r2, r1
 8000760:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000762:	2300      	movs	r3, #0
 8000764:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFUN) {
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	795b      	ldrb	r3, [r3, #5]
 800076a:	2b02      	cmp	r3, #2
 800076c:	d831      	bhi.n	80007d2 <GPIO_Init+0x322>
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	791b      	ldrb	r3, [r3, #4]
 8000772:	08db      	lsrs	r3, r3, #3
 8000774:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	791b      	ldrb	r3, [r3, #4]
 800077a:	f003 0307 	and.w	r3, r3, #7
 800077e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	7c3a      	ldrb	r2, [r7, #16]
 8000786:	3208      	adds	r2, #8
 8000788:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800078c:	7bfb      	ldrb	r3, [r7, #15]
 800078e:	009b      	lsls	r3, r3, #2
 8000790:	220f      	movs	r2, #15
 8000792:	fa02 f303 	lsl.w	r3, r2, r3
 8000796:	43db      	mvns	r3, r3
 8000798:	4618      	mov	r0, r3
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	7c3a      	ldrb	r2, [r7, #16]
 80007a0:	4001      	ands	r1, r0
 80007a2:	3208      	adds	r2, #8
 80007a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	7c3a      	ldrb	r2, [r7, #16]
 80007ae:	3208      	adds	r2, #8
 80007b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
				(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	7a5b      	ldrb	r3, [r3, #9]
 80007b8:	461a      	mov	r2, r3
 80007ba:	7bfb      	ldrb	r3, [r7, #15]
 80007bc:	009b      	lsls	r3, r3, #2
 80007be:	fa02 f303 	lsl.w	r3, r2, r3
 80007c2:	4618      	mov	r0, r3
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	7c3a      	ldrb	r2, [r7, #16]
 80007ca:	4301      	orrs	r1, r0
 80007cc:	3208      	adds	r2, #8
 80007ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007d2:	bf00      	nop
 80007d4:	371c      	adds	r7, #28
 80007d6:	46bd      	mov	sp, r7
 80007d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40023800 	.word	0x40023800
 80007e4:	40013800 	.word	0x40013800
 80007e8:	40013c00 	.word	0x40013c00

080007ec <GPIO_ReadFromInputPin>:
		GPIOI_REG_RESET();
	}

}

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80007ec:	b480      	push	{r7}
 80007ee:	b085      	sub	sp, #20
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	6078      	str	r0, [r7, #4]
 80007f4:	460b      	mov	r3, r1
 80007f6:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	691a      	ldr	r2, [r3, #16]
 80007fc:	78fb      	ldrb	r3, [r7, #3]
 80007fe:	fa22 f303 	lsr.w	r3, r2, r3
 8000802:	b2db      	uxtb	r3, r3
 8000804:	f003 0301 	and.w	r3, r3, #1
 8000808:	73fb      	strb	r3, [r7, #15]
	return value;
 800080a:	7bfb      	ldrb	r3, [r7, #15]
}
 800080c:	4618      	mov	r0, r3
 800080e:	3714      	adds	r7, #20
 8000810:	46bd      	mov	sp, r7
 8000812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000816:	4770      	bx	lr

08000818 <GPIO_ToggleOutputPin>:

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value) {
	pGPIOx->ODR = Value;

}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 8000818:	b480      	push	{r7}
 800081a:	b083      	sub	sp, #12
 800081c:	af00      	add	r7, sp, #0
 800081e:	6078      	str	r0, [r7, #4]
 8000820:	460b      	mov	r3, r1
 8000822:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	695b      	ldr	r3, [r3, #20]
 8000828:	78fa      	ldrb	r2, [r7, #3]
 800082a:	2101      	movs	r1, #1
 800082c:	fa01 f202 	lsl.w	r2, r1, r2
 8000830:	405a      	eors	r2, r3
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	615a      	str	r2, [r3, #20]
}
 8000836:	bf00      	nop
 8000838:	370c      	adds	r7, #12
 800083a:	46bd      	mov	sp, r7
 800083c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000840:	4770      	bx	lr
	...

08000844 <__libc_init_array>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	4d0d      	ldr	r5, [pc, #52]	; (800087c <__libc_init_array+0x38>)
 8000848:	4c0d      	ldr	r4, [pc, #52]	; (8000880 <__libc_init_array+0x3c>)
 800084a:	1b64      	subs	r4, r4, r5
 800084c:	10a4      	asrs	r4, r4, #2
 800084e:	2600      	movs	r6, #0
 8000850:	42a6      	cmp	r6, r4
 8000852:	d109      	bne.n	8000868 <__libc_init_array+0x24>
 8000854:	4d0b      	ldr	r5, [pc, #44]	; (8000884 <__libc_init_array+0x40>)
 8000856:	4c0c      	ldr	r4, [pc, #48]	; (8000888 <__libc_init_array+0x44>)
 8000858:	f000 f818 	bl	800088c <_init>
 800085c:	1b64      	subs	r4, r4, r5
 800085e:	10a4      	asrs	r4, r4, #2
 8000860:	2600      	movs	r6, #0
 8000862:	42a6      	cmp	r6, r4
 8000864:	d105      	bne.n	8000872 <__libc_init_array+0x2e>
 8000866:	bd70      	pop	{r4, r5, r6, pc}
 8000868:	f855 3b04 	ldr.w	r3, [r5], #4
 800086c:	4798      	blx	r3
 800086e:	3601      	adds	r6, #1
 8000870:	e7ee      	b.n	8000850 <__libc_init_array+0xc>
 8000872:	f855 3b04 	ldr.w	r3, [r5], #4
 8000876:	4798      	blx	r3
 8000878:	3601      	adds	r6, #1
 800087a:	e7f2      	b.n	8000862 <__libc_init_array+0x1e>
 800087c:	080008a4 	.word	0x080008a4
 8000880:	080008a4 	.word	0x080008a4
 8000884:	080008a4 	.word	0x080008a4
 8000888:	080008a8 	.word	0x080008a8

0800088c <_init>:
 800088c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800088e:	bf00      	nop
 8000890:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000892:	bc08      	pop	{r3}
 8000894:	469e      	mov	lr, r3
 8000896:	4770      	bx	lr

08000898 <_fini>:
 8000898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800089a:	bf00      	nop
 800089c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800089e:	bc08      	pop	{r3}
 80008a0:	469e      	mov	lr, r3
 80008a2:	4770      	bx	lr
